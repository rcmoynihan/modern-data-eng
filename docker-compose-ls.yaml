version: "3.10"
x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile.airflow
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__LOGGING_LEVEL=INFO
    - AIRFLOW__SMTP__SMTP_HOST=maildev  # Name of your Maildev service in Docker Compose
    - AIRFLOW__SMTP__SMTP_PORT=25  # Default Maildev port
    - AIRFLOW__SMTP__SMTP_MAIL_FROM=airflow_notification@rainforest.com
    - _AIRFLOW_DB_MIGRATE=True
    - _AIRFLOW_WWW_USER_CREATE=True
    - _AIRFLOW_WWW_USER_USERNAME=${_AIRFLOW_WWW_USER_USERNAME:-airflow}
    - _AIRFLOW_WWW_USER_PASSWORD=${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./airflow-data/logs:/opt/airflow/logs
    - ./airflow-data/plugins:/opt/airflow/plugins
    - ./airflow-data/airflow.cfg:/opt/airlfow/airflow.cfg
  depends_on:
    - postgres
  networks:
    - data-eng-net

x-clickhouse-defaults: &clickhouse-defaults
  restart: on-failure
  image: clickhouse/clickhouse-server:23.11.1-alpine
  tty: true
  depends_on:
    - zookeeper-1
  logging:
    options:
      max-size: 50m
      max-file: "3"
  healthcheck:
    test: ["CMD", "wget", "--spider", "-q", "localhost:8123/ping"]
    interval: 30s
    timeout: 5s
    retries: 3
  ulimits:
    nproc: 65535
    nofile:
      soft: 262144
      hard: 262144

x-db-depend: &db-depend
  depends_on:
    clickhouse:
      condition: service_healthy

services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-test}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-test}
      - AWS_REGION=${AWS_REGION:-us-east-1}
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - data-eng-net
  
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    networks:
      - data-eng-net
    restart: always

  airflow-init:
    << : *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - >
        airflow db migrate &&
        airflow variables set latest_partition_key "year=1970/month=01/day=01" &&
        airflow users list || (
          airflow users create
            --role Admin
            --username admin 
            --password admin
            --email airflow@airflow.com
            --firstname airflow
            --lastname airflow 
        ) &&
        airflow connections add aws_local \
            --conn-type 'aws' \
            --conn-login 'test' \
            --conn-password 'test' \
            --conn-extra '{"region_name": "us-east-1", "endpoint_url": "http://localstack:4566"}' &&
        airflow connections add clickhouse_local \
            --conn-type 'sqlite' \
            --conn-host 'clickhouse' \
            --conn-login 'default' \
            --conn-port 8123
    restart: on-failure


  airflow-webserver:
    << : *airflow-common
    command: airflow webserver
    ports:
      - 8080:8080
    container_name: airflow_webserver
    restart: always

  airflow-scheduler:
    << : *airflow-common
    command: airflow scheduler
    container_name: airflow_scheduler
    restart: always
  
  maildev:
    image: djfarrelly/maildev
    ports:
      - "1080:80"  # Web interface
      - "1025:25"  # SMTP server
    networks:
      - data-eng-net

  zookeeper-1:
    image: bitnami/zookeeper:3.7.1
    container_name: signoz-zookeeper-1
    hostname: zookeeper-1
    user: root
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    volumes:
      - zookeeper_data_1:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
    networks:
      - data-eng-net

  clickhouse:
    <<: *clickhouse-defaults
    container_name: signoz-clickhouse
    hostname: clickhouse
    ports:
      - "9000:9000"
      - "8123:8123"
      - "9181:9181"
    volumes:
      - ./clickhouse_confs/clickhouse-config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse_confs/clickhouse-users.xml:/etc/clickhouse-server/users.xml
      - ./clickhouse_confs/clickhouse-cluster.xml:/etc/clickhouse-server/config.d/cluster.xml
      - clickhouse_data:/var/lib/clickhouse/
    networks:
      - data-eng-net

networks:
  data-eng-net:
    driver: bridge

volumes:
  postgres-db-volume:
  zookeeper_data_1:
  clickhouse_data:
